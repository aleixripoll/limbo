---
import { Image } from "astro:assets";

import AuthorSingle from "@layouts/AuthorSingle.astro";
import Base from "@layouts/Base.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import dateFormat from "@lib/utils/dateFormat";

import { sortByDate } from "@lib/utils/sortFunctions";
import { humanize, slugify } from "@lib/utils/textConverter";
import { BiCalendar, BiCategoryAlt } from "react-icons/bi/index.js";

export async function getStaticPaths() {
  const authors = await getSinglePage("authors");

  const paths = authors.map((author: any) => ({
    params: {
      single: author.slug,
    },
    props: { author },
  }));
  return paths;
}

const { author } = Astro.props;
const { title, meta_title, description, image } = author.data;

// Author Posts
const posts = await getSinglePage("posts");
const sortPostsByDate = sortByDate(posts);
const currentPosts = sortPostsByDate.filter((post) => {
  return post.data.authors
    .map((author: string) => slugify(author))
    .includes(slugify(title));
});
//const postImages = import.meta.glob<{ default: ImageMetadata }>(
//  "/src/assets/images/posts/*/*.{jpeg,jpg,png,gif,webp}"
//);
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <AuthorSingle author={author} />

  {
    currentPosts.length > 0 && (
      <section class="section pt-8 mb-8">
        <div class="container text-center">
          <h2 class="h3 mb-12 text-center uppercase font-light">Articles recents</h2>
          <div
            class={`row gy-4 ${
              currentPosts.length < 3 ? "justify-center" : ""
            }`}
          >
            {currentPosts.slice(0, 6).map((post: any) => (
              <div class="col-12 sm:col-6 lg:col-4">
                {post.data.image && (
                  <a
                    href={`${import.meta.env.BASE_URL}${post.slug}`}
                    class="group block overflow-hidden rounded-lg hover:text-primary"
                  >
                    <Image
                      class="w-full transition duration-300 group-hover:scale-[1.03] max-h-36 object-cover"
                      src={post.data.image}
                      alt={post.data.title}
                      width={445}
                      height={230}
                    />
                  </a>
                )}
                <ul class="mt-4 flex flex-wrap items-center justify-center text-sm uppercase font-light">
                  <!-- <li class="mb-2 mr-4 flex flex-wrap items-center font-medium">
                    <BiCalendar className="mr-1 h-[16px] w-[16px]" />
                    <>{dateFormat(post.data.date)}</>
                  </li>-->
                  <li class="mb-2 mr-4 flex flex-wrap items-center">
                    <BiCategoryAlt className="mr-1 h-[16px] w-[16px]" />
                    <>
                      <ul>
                        {post.data.categories.map(
                          (category: string, i: number) => (
                            <li class="inline-block">
                              <a
                                href={`${import.meta.env.BASE_URL}categories/${slugify(category)}`}
                                class="mr-1 hover:text-primary"
                              >
                                {humanize(category)}{i !== post.data.categories.length - 1 && ","}
                              </a>
                            </li>
                          )
                        )}
                      </ul>
                    </>
                  </li>
                </ul>
                <h3 class="h4 lg:h5">
                  <a
                    href={`${import.meta.env.BASE_URL}${post.slug}`}
                    class="block hover:text-primary"
                  >
                    {post.data.title}
                  </a>
                </h3>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }
</Base>
