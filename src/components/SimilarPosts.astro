---
import { Image } from "astro:assets";
import { humanize, slugify } from "@lib/utils/textConverter";
import { BiCategoryAlt, BiTime, BiCalendar } from "react-icons/bi/index.js";
import dateFormat from "@lib/utils/dateFormat";

const { posts } = Astro.props;

// Calculate reading time (rough estimate: 200 words per minute)
function calculateReadingTime(content: string): number {
  const words = content.split(/\s+/).length;
  return Math.ceil(words / 200);
}
---

<div class="similar-posts-grid">
  {
    posts.map((post: any, i: number) => {
      const readingTime = calculateReadingTime(post.body || "");
      return (
        <article class="similar-post-item" data-post-slug={post.slug}>
          {post.data.image && (
            <a
              href={`${import.meta.env.BASE_URL}${post.slug}`}
              class="similar-post-card group"
              aria-label={`Llegir article: ${post.data.title}`}
            >
              <div class="similar-post-image-container">
                <Image
                  class="similar-post-image"
                  src={post.data.image}
                  alt={post.data.title}
                  width={445}
                  height={230}
                  loading="lazy"
                />
                <div class="similar-post-overlay">
                  <span class="similar-post-read-more">Llegir m√©s</span>
                </div>
                
                {/* Reading time badge */}
                {readingTime > 0 && (
                  <div class="absolute top-2 right-2 bg-black/70 backdrop-blur-sm text-white text-xs px-1.5 py-0.5 rounded-full font-medium">
                    <BiTime className="inline mr-1 h-2.5 w-2.5" />
                    {readingTime} min
                  </div>
                )}
              </div>
              
              <div class="similar-post-content">
                <div class="similar-post-meta">
                  <div class="similar-post-date">
                    <BiCalendar className="similar-post-icon" />
                    <span>{dateFormat(post.data.date)}</span>
                  </div>
                  <div class="similar-post-categories">
                    <BiCategoryAlt className="similar-post-icon" />
                    <div class="similar-post-category-list">
                      {post.data.categories.map((category: string, i: number) => (
                        <span class="similar-post-category">
                          {humanize(category)}{i !== post.data.categories.length - 1 && ","}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
                
                <h3 class="similar-post-title">
                  {post.data.title}
                </h3>
                
                {post.data.description && (
                  <p class="similar-post-excerpt">
                    {post.data.description}
                  </p>
                )}
                
                {/* Subtle visual indicator */}
                <div class="absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r from-primary/20 to-primary/40 opacity-0 transition-opacity duration-300 group-hover:opacity-100"></div>
              </div>
            </a>
          )}
        </article>
      );
    })
  }
</div>
